{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","Mode","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","role","htmlFor","Title","Textform","document","text","setText","useState","style","color","backgroundColor","value","onChange","event","target","rows","upper","newText","toUpperCase","lowwer","toLowerCase","listen","synth","window","speechSynthesis","utterance1","SpeechSynthesisUtterance","lang","speak","split","length","prototype","PropTypes","string","App","setMode","setTitle","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"0NAIe,SAASA,EAAOC,GAC7B,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KACKF,IAAAC,cAAA,OAAKE,UAAS,kCAAAC,OAAoCL,EAAMM,KAAI,QAAAD,OAAOL,EAAMM,OAAQ,IAExFL,IAAAC,cAAA,KAAGE,UAAU,eAAeG,KAAK,KAAKP,EAAMQ,OAC5CP,IAAAC,cAAA,UAAQE,UAAU,iBAAiBK,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpLb,IAAAC,cAAA,QAAME,UAAU,yBAGlBH,IAAAC,cAAA,OAAKE,UAAU,2BAA2BW,GAAG,0BAC3Cd,IAAAC,cAAA,MAAIE,UAAU,sBACZH,IAAAC,cAAA,MAAIE,UAAU,mBACZH,IAAAC,cAAA,KAAGE,UAAU,WAAWG,KAAK,KAAI,QAAKN,IAAAC,cAAA,QAAME,UAAU,WAAU,gBAMpEH,IAAAC,cAAA,OAAKE,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAe,OAAO,UAAW,KACxFL,IAAAC,cAAA,SAAOE,UAAU,mBAAmBY,QAAShB,EAAMiB,WAAYR,KAAK,WAAWS,KAAK,SAASH,GAAG,2BAChGd,IAAAC,cAAA,SAAOE,UAAU,mBAAmBe,QAAQ,0BAA0BnB,EAAMoB,WCvB/D,SAASC,EAASrB,GAC/BsB,SAASd,MAAM,WACf,MA4BOe,EAAMC,GAAWC,mBAAS,IAEjC,OACCxB,IAAAC,cAAAD,IAAAE,SAAA,KAEDF,IAAAC,cAAA,OAAKE,UAAU,aACfH,IAAAC,cAAA,OAAKE,UAAU,OAAOsB,MAAO,CAACC,MAAmB,UAAb3B,EAAMM,KAAe,QAAQ,UAC/DL,IAAAC,cAAA,SAAOiB,QAAQ,YAAW,wBAC1BlB,IAAAC,cAAA,YAAUE,UAAU,eAAeW,GAAG,WAAWW,MAAO,CAACE,gBAA6B,UAAb5B,EAAMM,KAAe,QAAQ,OAAOqB,MAAmB,UAAb3B,EAAMM,KAAe,QAAQ,SAAUuB,MAAQN,EAAMO,SApC1JC,IACVP,EAAQO,EAAMC,OAAOH,QAmCmKI,KAAK,OAEjMhC,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQE,UAAU,wBAAwBsB,MAAO,CAACC,MAAmB,UAAb3B,EAAMM,KAAe,QAAQ,SAAUU,QAzBlFkB,KAEX,IAAIC,EAASZ,EAAKa,cAClBZ,EAAQW,KAsBqG,uBAC/GlC,IAAAC,cAAA,UAAQE,UAAU,wBAAwBsB,MAAO,CAACC,MAAmB,UAAb3B,EAAMM,KAAe,QAAQ,SAAUU,QAlClFqB,KACX,IAAIF,EAASZ,EAAKe,cAElBd,EAAQW,KA+BsG,uBAChHlC,IAAAC,cAAA,UAAQE,UAAU,wBAAwBsB,MAAO,CAACC,MAAmB,UAAb3B,EAAMM,KAAe,QAAQ,SAAUU,QAtBpFuB,KACX,MAAMC,EAAQC,OAAOC,gBACfC,EAAa,IAAIC,yBAAyBrB,GAChDoB,EAAWE,KAAK,QAChBL,EAAMM,MAAMH,KAkBoG,qBAGlH1C,IAAAC,cAAA,OAAKa,GAAG,eAAeX,UAAU,iBAAiBsB,MAAO,CAACC,MAAmB,UAAb3B,EAAMM,KAAe,QAAQ,UAC3FL,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,SAAG,oBAAkBqB,EAAKwB,MAAM,KAAKC,OAAO,aAAWzB,EAAKyB,OAAO,cACnE/C,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,SAAIqB,KDnBRxB,EAAOkD,UAAU,CAACzC,MAAM0C,IAAUC,QEkBnBC,MAtCf,WACE,MAAO9C,EAAM+C,GAAW5B,mBAAS,UAC1BL,EAAOkC,GAAY7B,mBAAS,mBAcnC,OACMxB,IAAAC,cAAAD,IAAAE,SAAA,KAEAF,IAAAC,cAACH,EAAM,CAACS,MAAM,iBAAiBF,KAAMA,EAAMc,MAAOA,EAAOH,WAf9CA,KACF,UAAPX,GACF+C,EAAQ,QACRC,EAAS,oBACThC,SAASiC,KAAK7B,MAAME,gBAAgB,SAEpCyB,EAAQ,SACRC,EAAS,mBACThC,SAASiC,KAAK7B,MAAME,gBAAgB,YAQpC3B,IAAAC,cAAA,OAAKE,UAAU,kBAKbH,IAAAC,cAACmB,EAAQ,CAACf,KAAMA,OC1BXkD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAW7C,SAAS8C,eAAe,SACpDC,OACHpE,IAAAC,cAACD,IAAMqE,WAAU,KACfrE,IAAAC,cAACkD,EAAG,QAORI,K","file":"static/js/main.c27da087.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n         <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}> {/* for navbar backgroud_color */}\r\n  {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n  <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      {/* <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"/about\">About Us</a>\r\n      </li> */}\r\n    </ul>\r\n    <div className={`form-check form-switch text-${props.Mode==='light'?'dark':'light'}`}>  {/* for radio button text color */}   \r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.Title}</label>\r\n</div>\r\n  </div>\r\n</nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.prototype={title:PropTypes.string}\r\n","import React , {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  document.title=\"Textfrom\"\r\n  const changing=(event)=>{\r\n        setText(event.target.value)\r\n        // console.log(\"hello\")\r\n    }\r\n\r\n\r\n    const lowwer=()=>{      \r\n      let newText= text.toLowerCase()\r\n      // alert(newText)\r\n      setText(newText);\r\n  }\r\n\r\n\r\n\r\n    const upper =()=>{\r\n      // console.log(\"upper\");\r\n      let newText= text.toUpperCase()\r\n      setText(newText);\r\n  }\r\n  const listen=()=>{\r\n    const synth = window.speechSynthesis;\r\n    const utterance1 = new SpeechSynthesisUtterance(text);\r\n    utterance1.lang=\"hi-IN\"\r\n    synth.speak(utterance1);\r\n\r\n  }\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n   <>\r\n\r\n  <div className=\"container\">\r\n  <div className=\"mb-3\" style={{color:props.Mode==='light'?'black':'white'}}>\r\n    <label htmlFor=\"textform\">Enter The Text Below</label>\r\n    <textarea className=\"form-control\" id=\"textform\" style={{backgroundColor:props.Mode==='light'?'white':'grey',color:props.Mode==='light'?'black':'white'}} value= {text} onChange={changing} rows=\"4\"></textarea>\r\n  </div>\r\n    <div>\r\n    <button className=\"btn btn-primary mx-1 \" style={{color:props.Mode==='light'?'black':'white'}} onClick={upper}>Change to UpperCase</button>\r\n    <button className=\"btn btn-primary mx-1 \" style={{color:props.Mode==='light'?'black':'white'}} onClick={lowwer}>Change to LowerCase</button>\r\n    <button className=\"btn btn-primary mx-1 \" style={{color:props.Mode==='light'?'black':'white'}} onClick={listen}>click to listen</button>\r\n    </div>\r\n  </div>\r\n  <div id=\"word-summery\" className=\"container mb-3\" style={{color:props.Mode==='light'?'black':'white'}}>\r\n    <h4>Your Text Summery:</h4>\r\n    <p>you have written {text.split(\" \").length} word and {text.length} character</p>\r\n    <h4>Preview:</h4>\r\n    <p>{text}</p> \r\n  </div>\r\n   </>\r\n  )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport Textform from './components/Textform';\nimport React , {useState} from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Routes ,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  const [Title, setTitle] = useState(\"Enable DarkMode\");\n\n  const toggleMode=()=>{\n      if (Mode==='light') {\n        setMode('dark');\n        setTitle('Enable LightMode')\n        document.body.style.backgroundColor='grey'\n      } else {\n        setMode('light')\n        setTitle('Enable DarkMode')\n        document.body.style.backgroundColor='white'\n      }\n  }\n\n  return (\n        <>\n        {/* <Router> */}\n        <Navbar title=\"Text Analayzer\" Mode={Mode} Title={Title} toggleMode={toggleMode}/>\n        <div className=\"container my-5\">\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>}/> */}\n          {/* we use exact because if we dont then react should be doing partial matching so we use exact befor the path */}\n          {/* <Route exact path=\"/\" element={<Textform Mode={Mode}/>}/> */}\n          <Textform Mode={Mode}/>\n        {/* </Routes> */}\n        </div>\n        {/* <div className=\"container\">\n          <About/>\n        </div> */}\n        {/* </Router> */}\n      \n\n        </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}